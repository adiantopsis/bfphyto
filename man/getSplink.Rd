% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSplink.R
\name{getSplink}
\alias{getSplink}
\title{Get data on Species Link}
\usage{
getSplink(
  apikey = NULL,
  dir = "results/",
  filename = "output",
  save = FALSE,
  basisOfRecord = NULL,
  family = NULL,
  species = NULL,
  collectionCode = NULL,
  country = NULL,
  stateProvince = NULL,
  county = NULL,
  bbox = NULL,
  Coordinates = NULL,
  CoordinatesQuality = NULL,
  Scope = NULL,
  Synonyms = "no synomyms",
  Typus = FALSE,
  Images = NULL,
  RedList = FALSE,
  MaxRecords = NULL,
  file.format = "csv",
  compress = FALSE
)
}
\arguments{
\item{apikey}{A character string with your speciesLink API key. If \code{NULL}, a message is shown with the link to get one.}

\item{dir}{Directory where output files will be saved (if \code{save = TRUE}).}

\item{filename}{Name of the output file (without extension).}

\item{save}{Logical. If \code{TRUE}, the resulting data will be saved to disk.}

\item{basisOfRecord}{Type of record: \code{"PreservedSpecimen"}, \code{"LivingSpecimen"}, \code{"FossilSpecimen"}, \code{"HumanObservation"}, \code{"MachineObservation"}, \code{"MaterialSample"}.}

\item{family}{Character vector with family names to filter the query.}

\item{species}{Character vector with species scientific names (up to 50).}

\item{collectionCode}{Character vector with collection codes.}

\item{country, }{stateProvince, county Geographic filters. Character vectors with names.}

\item{bbox}{Numeric vector defining a bounding box in the format: \code{c(minLon, minLat, maxLon, maxLat)}.}

\item{Coordinates}{Character. Options: \code{"yes"}, \code{"no"}, \code{"consistent"}, \code{"original"}, \code{"automatic"}, \code{"blocked"}.}

\item{CoordinatesQuality}{Character. \code{"Good"} or \code{"Bad"}.}

\item{Scope}{Character. Data scope: \code{"plants"}, \code{"animals"}, \code{"microrganisms"}, or \code{"fossils"}.}

\item{Synonyms}{Synonym database: \code{"species2000"}, \code{"flora2020"}, \code{"MycoBank"}, \code{"AlgaeBase"}, \code{"DSMZ"}, or \code{"no synonyms"}.}

\item{Typus}{Logical. If \code{TRUE}, restricts to typus specimens.}

\item{Images}{Character. Options: \code{"Yes"}, \code{"Live"}, \code{"Polen"}, \code{"Wood"}.}

\item{RedList}{Logical or character. If \code{TRUE} or \code{"all"}, filters Red List species (e.g., \code{"VU+EN+CR"}).}

\item{MaxRecords}{Integer. Maximum number of records to return.}

\item{file.format}{File format to save the data: \code{"csv"} (default) or \code{"rds"}.}

\item{compress}{Logical. Whether to compress the output file.}
}
\value{
A data frame containing species occurrence data returned by the speciesLink web service. If \code{save = TRUE}, also saves the data to disk.
}
\description{
This function interfaces with the \href{https://specieslink.net/}{speciesLink} web service to retrieve occurrence data
for plant, animal, microorganism, or fossil specimens. It allows fine filtering using taxonomic, geographic, and metadata fields.
The output can be optionally saved in \code{.csv} or \code{.rds} formats.
}
\details{
This function builds a query URL using selected filters, sends the request to speciesLink,
parses the JSON response, and returns the occurrence records. It supports saving results locally.
}
\note{
Ensure that you respect all data usage and citation policies from speciesLink and its data providers.
}
\examples{
\dontrun{
getSplink(
  apikey = "your_api_key_here",
  species = c("Euterpe edulis"),
  country = "Brazil",
  save = TRUE,
  file.format = "csv"
)
}

}
\seealso{
\url{https://specieslink.net}, \url{https://specieslink.net/ws/1.0/search}
}
